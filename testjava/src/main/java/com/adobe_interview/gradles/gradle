https://blog.mindorks.com/gradle-for-android-developers-getting-the-most-of-it
https://blog.mindorks.com/building-android-applications-with-gradle-tutorial

Gradle ?
gradle is an open source build automation tool which focuses on flexibility and performance.
in simple word.. it is an automation tool which generate the application build.It is official build tool for Android.
it is an advanced build toolkit, to automate and manage the build process while allowing you to define flexible custom build configurations.

In Android there are 2 types of Gradle.
1) Top-level build.gradle
2) Module-level build.gradle
● Top-level build.gradle supports various build configuration files, like
    buildscript
    dependencies
    allprojects
    task clean(type: Delete)

● Module-level build.gradle
    compileSdkVersion- targetSdkVersion
    defaultConfig
    buildTypes
    dependencies


Gradle Plugins
Gradle alone cannot do much of the automation build process.
That’s why if we go back to our section, where we have mentioned the definition of Gradle, it is focused on “Flexibility”.


Explanation of gradle.png diagram is as below:
In words:
● compilers convert your source code into DEX (Dalvik Executable) files, which include the bytecode that runs on Android devices,
   and everything else into compiled resources.
● The APK Packager combines the DEX files and compiled resources into a single APK. Before your app can be installed and deployed onto an
   Android device, the APK must be signed.
● The APK Packager signs your APK using either the debug or release Keystore.
● If you are building a debug version of your app, that is, an app you intend only for testing and profiling, the packager signs your app with
   the debug Keystore. Android Studio automatically configures new projects with a debug Keystore.
● If you are building a release version of your app that you intend to release externally, the packager signs your app with the release Keystore.
● To create a release Keystore, read about signing your app in Android Studio.
● Before generating your final APK, the packager uses the zipalign tool to optimize your app to use less memory when running on a device.
● At the end of the build process, you have either a debug APK or release APK of your app that you can use to deploy, test, or release to
    external users.

Gradle Wrapper:
Since Gradle is under development and new version can come anytime. So, to have a smooth flow while executing Gradle commands, Gradle Wrapper
is used. The Gradle Wrapper is a shell script called gradlew on Mac OS or Linux and a batch file called gradlew.bat in Windows.
So, when you run this script and the selected version of Gradle is not present then this will automatically download the selected version of Gradle.
