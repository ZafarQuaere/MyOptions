Oops Concepts:
1)Abstraction
2)Incapsulation
3)Polymorphism
4)Inheritance


5)Collections
6)Exception Handling
7)Multithreading.
8)Java 8 (Lambda, Stream etc)


Other topics :
1)Static				2)Synchronize			3)final
4)Global				5)super					6)transient
7)serialization		    8)this					9)qualifiers


1) Data Structure, algorithm and complexity analysis.
2) Gradle and Maven, Ant build System
3) Strong OOPs Concept.
4) Git and SVN.
5) Code Analysis and Performance management tools
6) Restful, Soap, OAuth




Data Structure consist of following classes and interfaces.

1) Enumeration --> retrieve successive data by using nextElements()
2) BitSet --> It create special type of Array which holds bit values. This array size can increase as per needed.
3) Vector --> It is similar to Traditional Array. but the size of Vector can be automatically shrink and expand if necessary.
4) Stack --> It works on the theorem of Last in first Out (Lifo) process.
5) Dictionary --> It is an abstract class, It is defined a data structure for mapping key to values.
6) Hashtable --> It provides the way of organizing data based on some key structure.
7) Properties --> It is subclass of Hashtable, and basically used to maintain list of values where key is "String" and Value is also "String".

Linear Data Structure.
-> A DS can be said as Linear if its element combine to form any specific order.
There are basically two techniques for representing linear structure.

1)first way is to provide linear relationship among the all elements represents by the means of linear memory locations.
	This linear structure is termed as Array.

2) Second way is to provide linear relationship among all the elements represents by the means of concept of POINTER or a LINK.
	These linear structure are termed as Linked List.

Common Example of Linear DS are :
1) Arrays
2) Stack
3) Queues
4) Linked List.
