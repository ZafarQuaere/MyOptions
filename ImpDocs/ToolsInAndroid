1) BMGR tool :
 The tool provides commands to initiate backup and restore operations so that you don't need to repeatedly wipe data or take similar
 intrusive steps in order to test your application's backup functionality. The bmgr tool supports both Auto Backup and Key/Value Backup.

2) etc1tool :
etc1tool is a command line utility that lets you encode PNG images to the ETC1 compression standard and decode ETC1
compressed images back to PNG.


3) JOBB :
The jobb tool allows you to build encrypted and unencrypted APK expansion files in Opaque Binary Blob (OBB) format.
You can download and mount these expansion files in your application using StorageManager on devices with Android 2.3 (API Level 9) or higher.
OBB files are used to provide additional file assets for Android applications (such as graphics, sounds and video), separate from
an application's APK file.


4) logcat Command-line Tool :

5) Set the Application ID
Every Android app has a unique application ID that looks like a Java package name, such as com.example.myapp.
This ID uniquely identifies your app on the device and in Google Play Store. If you want to upload a new version of your app,
the application ID (and the certificate you sign it with) must be the same as the original APKÊìÅf you change the application ID,
Google Play Store treats the APK as a completely different app. So once you publish your app, you should never change the application ID.

android {
    defaultConfig {
        applicationId "com.example.myapp"
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
    }
    ...
}


6) Configure Apps with Over 64K Methods :
65,536. This number is significant in that it represents the total number of references that can be invoked by the code within a
single Dalvik Executable (DEX) bytecode file.
      solution : Multidex support library prior to Android 5.0

7) Gradle :
Gradle, an advanced build toolkit, to automate and manage the build process, while allowing you to define flexible custom build configurations.
Each build configuration can define its own set of code and resources, while reusing the parts common to all versions of your app.

Without using studio .apk can be build using cmd line .

8) Configure Build Variants
Each build variant represents a different version of your app that you can build. For example, you might want to build one version of your app
that's free, with a limited set of content, and another paid version that includes more. You can also build different versions of your app
that target different devices, based on API level or other device variations.

plz refer : http://www.techotopia.com/index.php/An_Android_Studio_Gradle_Build_Variants_Example
